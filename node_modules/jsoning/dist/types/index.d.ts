export interface JSONValueArray extends Array<JSONValue> {
}
export interface JSONValueRecord extends Record<string, JSONValue> {
}
/**
 * Defines the types element values can be.
 * @typedef JSONValue
 * @type {(string|number|boolean|Record<string, JSONValue>|JSONValueArray|undefined|null)}
 */
export type JSONValue = string | number | boolean | JSONValueRecord | JSONValueArray | undefined | null;
/**
 * Defines the types element values can be.
 * @typedef JsoningOptions
 * @type {{ignoreJsonFileCheck?: boolean}}
 */
export type JsoningOptions = {
    /**
     * Whether to ignore if the file is not a JSON file. Default is `true`.
     * @type {boolean}
     */
    ignoreJsonFileCheck?: boolean;
};
